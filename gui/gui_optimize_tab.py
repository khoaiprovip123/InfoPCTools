from PyQt5.QtWidgets import (
    QWidget, QVBoxLayout, QSplitter, QScrollArea, QGroupBox, QPushButton,
    QStackedWidget, QTextEdit, QTableWidget, QFrame, QHBoxLayout
)
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QTextOption

# Gi·∫£ s·ª≠ c√°c h√†m core v√† h·∫±ng s·ªë c·∫ßn thi·∫øt s·∫Ω ƒë∆∞·ª£c truy c·∫≠p qua parent_app
# ho·∫∑c ƒë∆∞·ª£c import tr·ª±c ti·∫øp n·∫øu ch√∫ng l√† h·∫±ng s·ªë to√†n c·ª•c.
from core.pc_info_functions import ( # type: ignore
    clear_temporary_files, open_resource_monitor, get_startup_programs,
    run_sfc_scan, create_system_restore_point, update_all_winget_packages,
    optimize_windows_services, clean_registry_with_backup, list_printers,
    remove_printer, clear_print_queue, restart_print_spooler_service
)

def create_optimize_tab_content(parent_app):
    """
    T·∫°o n·ªôi dung cho tab T·ªëi ∆Øu.
    'parent_app' l√† instance c·ªßa PcInfoAppQt.
    """
    tab_main_layout = QVBoxLayout(parent_app.page_optimize)
    content_splitter_optimize = QSplitter(Qt.Horizontal)
    tab_main_layout.addWidget(content_splitter_optimize)

    left_column_widget = QWidget()
    left_column_layout = QVBoxLayout(left_column_widget)
    left_column_layout.setContentsMargins(0,0,0,0)
    left_column_layout.setSpacing(5)
    scroll_area_actions = QScrollArea()
    scroll_area_actions.setWidgetResizable(True)
    optimize_actions_widget_container = QWidget()
    parent_app.optimize_actions_layout = QVBoxLayout(optimize_actions_widget_container)
    parent_app.optimize_actions_layout.setSpacing(10)
    parent_app.optimize_actions_layout.setAlignment(Qt.AlignTop)

    parent_app.button_one_click_optimize = QPushButton("üöÄ T·ªëi ∆Øu H√≥a To√†n Di·ªán (1-Click)")
    parent_app.button_one_click_optimize.setFont(parent_app.h2_font)
    parent_app.button_one_click_optimize.setObjectName("OneClickOptimizeButton")
    parent_app.button_one_click_optimize.setToolTip("Ch·∫°y c√°c t√°c v·ª• d·ªçn d·∫πp, t·ªëi ∆∞u c∆° b·∫£n v√† s·ª≠a l·ªói ƒë∆∞·ª£c ƒë·ªÅ xu·∫•t.")
    parent_app.button_one_click_optimize.clicked.connect(parent_app.on_one_click_optimize_clicked)
    parent_app.optimize_actions_layout.addWidget(parent_app.button_one_click_optimize)

    parent_app.button_toggle_gaming_mode = QPushButton("üéÆ Ch·∫ø ƒê·ªô Gaming: T·∫ÆT")
    parent_app.button_toggle_gaming_mode.setCheckable(True)
    parent_app.button_toggle_gaming_mode.setFont(parent_app.h2_font)
    parent_app.button_toggle_gaming_mode.setObjectName("GamingModeButton")
    parent_app.button_toggle_gaming_mode.toggled.connect(parent_app.on_toggle_gaming_mode_clicked)
    parent_app.optimize_actions_layout.addWidget(parent_app.button_toggle_gaming_mode)

    line_sep = QFrame()
    line_sep.setFrameShape(QFrame.HLine)
    line_sep.setFrameShadow(QFrame.Sunken)
    parent_app.optimize_actions_layout.addWidget(line_sep)

    group_cleanup = QGroupBox("D·ªçn d·∫πp & T·ªëi ∆∞u C∆° B·∫£n")
    group_cleanup.setFont(parent_app.h2_font)
    cleanup_layout = QVBoxLayout(group_cleanup)
    parent_app._add_utility_button(cleanup_layout, "X√≥a File T·∫°m & D·ªçn D·∫πp", lambda btn: parent_app._run_task_in_thread_qt(btn, parent_app.stacked_widget_results_optimize, clear_temporary_files, "optimize_clear_temp"))
    parent_app._add_utility_button(cleanup_layout, "M·ªü Resource Monitor", lambda btn: parent_app._run_task_in_thread_qt(btn, parent_app.stacked_widget_results_optimize, open_resource_monitor, "optimize_resmon"))
    parent_app._add_utility_button(cleanup_layout, "Qu·∫£n L√Ω ·ª®ng D·ª•ng Kh·ªüi ƒê·ªông", parent_app.on_manage_startup_programs_clicked)
    parent_app.optimize_actions_layout.addWidget(group_cleanup)

    group_fix_update = QGroupBox("S·ª≠a l·ªói & C·∫≠p nh·∫≠t")
    group_fix_update.setFont(parent_app.h2_font)
    fix_update_layout = QVBoxLayout(group_fix_update)
    parent_app._add_utility_button(fix_update_layout, "Ch·∫°y SFC Scan", lambda btn: parent_app._run_task_in_thread_qt(btn, parent_app.stacked_widget_results_optimize, run_sfc_scan, "optimize_sfc_scan"))
    parent_app._add_utility_button(fix_update_layout, "T·∫°o ƒêi·ªÉm Kh√¥i Ph·ª•c H·ªá Th·ªëng", lambda btn: parent_app._run_task_in_thread_qt(btn, parent_app.stacked_widget_results_optimize, create_system_restore_point, "optimize_create_restore_point"))
    parent_app._add_utility_button(fix_update_layout, "C·∫≠p Nh·∫≠t Ph·∫ßn M·ªÅm (Winget)", lambda btn: parent_app._run_task_in_thread_qt(btn, parent_app.stacked_widget_results_optimize, update_all_winget_packages, "optimize_winget_update"))
    parent_app.optimize_actions_layout.addWidget(group_fix_update)
    
    group_advanced_optimization = QGroupBox("T·ªëi ∆∞u N√¢ng Cao")
    group_advanced_optimization.setFont(parent_app.h2_font)
    advanced_opt_layout = QVBoxLayout(group_advanced_optimization)        
    parent_app._add_utility_button(advanced_opt_layout, "T·ªëi ∆∞u D·ªãch V·ª• Windows", lambda btn: parent_app._run_task_in_thread_qt(btn, parent_app.stacked_widget_results_optimize, optimize_windows_services, "optimize_optimize_services"))
    parent_app._add_utility_button(advanced_opt_layout, "D·ªçn D·∫πp Registry (C√≥ Sao L∆∞u)", lambda btn: parent_app._run_task_in_thread_qt(btn, parent_app.stacked_widget_results_optimize, clean_registry_with_backup, "optimize_clean_registry"))
    parent_app.optimize_actions_layout.addWidget(group_advanced_optimization)

    group_printer_management = QGroupBox("Qu·∫£n l√Ω M√°y In")
    group_printer_management.setFont(parent_app.h2_font)
    printer_mgmt_layout = QVBoxLayout(group_printer_management)
    parent_app._add_utility_button(printer_mgmt_layout, "Li·ªát k√™ M√°y In", lambda btn: parent_app._run_task_in_thread_qt(btn, parent_app.stacked_widget_results_optimize, list_printers, "optimize_list_printers", needs_wmi=True, result_type="table"))
    parent_app._add_utility_button(printer_mgmt_layout, "G·ª° M√°y In L·ªói", parent_app.run_remove_printer_qt)
    parent_app._add_utility_button(printer_mgmt_layout, "X√≥a L·ªánh In (T·∫•t c·∫£)", lambda btn: parent_app._run_task_in_thread_qt(btn, parent_app.stacked_widget_results_optimize, clear_print_queue, "optimize_clear_all_print_queues", needs_wmi=False))
    parent_app._add_utility_button(printer_mgmt_layout, "X√≥a L·ªánh In (Ch·ªçn M√°y In)", parent_app.run_clear_specific_print_queue_qt)
    parent_app._add_utility_button(printer_mgmt_layout, "Fix L·ªói M√°y In (Kh·ªüi ƒë·ªông l·∫°i Spooler)", lambda btn: parent_app._run_task_in_thread_qt(btn, parent_app.stacked_widget_results_optimize, restart_print_spooler_service, "optimize_restart_spooler", needs_wmi=False))
    parent_app.optimize_actions_layout.addWidget(group_printer_management)

    parent_app.optimize_actions_layout.addStretch(1)
    scroll_area_actions.setWidget(optimize_actions_widget_container)
    left_column_layout.addWidget(scroll_area_actions)
    content_splitter_optimize.addWidget(left_column_widget)

    results_container_widget = QWidget()
    parent_app.optimize_results_main_layout = QVBoxLayout(results_container_widget)
    parent_app.optimize_results_main_layout.setContentsMargins(0,0,0,0)
    parent_app.stacked_widget_results_optimize = parent_app._create_results_display_area(
        "K·∫øt qu·∫£ T·ªëi ∆Øu", "OptimizeResultTextEdit", "OptimizeResultTable" # ƒê·∫∑t t√™n objectName kh√°c nhau
    )

    parent_app.startup_manager_buttons_frame = QFrame()
    startup_buttons_layout = QHBoxLayout(parent_app.startup_manager_buttons_frame)
    parent_app.button_enable_startup_item = QPushButton("B·∫≠t m·ª•c ch·ªçn")
    parent_app.button_enable_startup_item.clicked.connect(lambda: parent_app.on_manage_selected_startup_item("enable"))
    parent_app.button_disable_startup_item = QPushButton("T·∫Øt m·ª•c ch·ªçn")
    parent_app.button_disable_startup_item.clicked.connect(lambda: parent_app.on_manage_selected_startup_item("disable"))
    startup_buttons_layout.addWidget(parent_app.button_enable_startup_item)
    startup_buttons_layout.addWidget(parent_app.button_disable_startup_item)
    parent_app.startup_manager_buttons_frame.setVisible(False)
    parent_app.optimize_results_main_layout.addWidget(parent_app.startup_manager_buttons_frame)

    parent_app.optimize_results_main_layout.addWidget(parent_app.stacked_widget_results_optimize, 1)
    content_splitter_optimize.addWidget(results_container_widget)
    content_splitter_optimize.setSizes([320, 430])